function plotAsSelected() {
  var tab_idx = $('#sensor_sel_tabs').tabs('option', 'selected');
  var data = <%= @report.flot[:data].to_json %>;

  var series = [];
  for (loc in data)  {
    series.push({
      data: data[loc][sensors[tab_idx].key],
      label: loc
    });
  }
  var opts = {
    xaxis: { mode: 'time' },
    yaxis: { min: sensors[tab_idx].min_y, max: sensors[tab_idx].max_y },
    grid: { color: $('.ui-widget-header').css('background-color') }
  };
  $.plot($('#graph'+tab_idx), series, opts);
}

$('input.ui-widget').val('');

$('#loading').hide();

var sen_sel = $('#sensor_sel_tabs');
var sensors = <%= @report.flot[:sensors].to_json %>;

if (!sen_sel.tabs('length'))  {// crafty check if tabs have already been initialized
  sen_sel.prepend('<ul></ul>').tabs();

  $.each(sensors, function(i, val) {
      var graph = $('<div id="graph'+i+'" class="flot-graph"/>');
      var graph_w = parseInt( /\d+/.exec(graph.css('width')) );
      var graph_h = parseInt( /\d+/.exec(graph.css('height')) );
      var graph_container = $('<div id="graph_cont'+i+'" style="width: '+ (graph_w + 30) +'px; height: '+ (graph_h + 20) +'px;"/>');
      graph_container.append(graph);
      sen_sel.append(graph_container).tabs('add', '#graph_cont'+i, val.name);;
  });
  sen_sel.bind('tabsshow', function() {plotAsSelected()});
  sen_sel.tabs('select', 0);
}

plotAsSelected();

$.fn.extend({
  with_tooltips: function () {

    function showTooltip(x, y, contents) {
      $('<div id="tooltip">' + contents + '</div>').css( {
        position: 'absolute',
        display: 'none',
        top: y + 15,
        left: x + 15,
        opacity: 0.80
      }).addClass('ui-state-highlight').appendTo("body").fadeIn(200);
    }

    var previousPoint = null;
    this.bind("plothover", function (event, pos, item) {
      var tooltip = $('#tooltip');
      if (item) {
        if (previousPoint != item.datapoint) {
          previousPoint = item.datapoint;
          
          tooltip.remove();

          var label = /-|^0/.test(item.datapoint[1]) ? item.datapoint[1] : '+'+item.datapoint[1];
          showTooltip(item.pageX, item.pageY, label);
        }
      }
      else {
        tooltip.remove();
        previousPoint = null;            
      }
    });
  }
});

function plotAsSelected() {
  var tab_idx = $('#sensor_sel_tabs').tabs('option', 'selected');
  var data = <%= @report.flot[:data].to_json %>;

  var series = [];
  for (loc in data)  {
    series.push({
      data: data[loc][sensors[tab_idx].key],
      label: loc
    });
  }

  var opts = {
    xaxis: {
      mode: 'time',
      zoomRange: <%= @report.flot[:zoom_range].to_json %>,
      panRange: <%= @report.flot[:pan_range].to_json %>
    },
    yaxis: {
      min: sensors[tab_idx].min_y,
      max: sensors[tab_idx].max_y,
      zoomRange: [sensors[tab_idx].max_y - sensors[tab_idx].min_y, sensors[tab_idx].max_y - sensors[tab_idx].min_y],
      panRange: [sensors[tab_idx].min_y, sensors[tab_idx].max_y]
    },
    grid: {
      color: $('.ui-widget-header').css('background-color'),
      hoverable: true
    },
    zoom: {
      interactive: true
    },
    pan: {
      interactive: true
    },
    series: {
      lines: {show: true},
      points: {show: true, radius: 2}
    }
  };
  var graph = $('#graph'+tab_idx);
  $.plot(graph, series, opts);
  graph.with_tooltips();
}

var sen_sel = $('#sensor_sel_tabs');
var sensors = <%= @report.flot[:sensors].to_json %>;

if (!sen_sel.tabs('length'))  {// crafty check if tabs have already been initialized
  sen_sel.prepend('<ul></ul>').tabs();

  $.each(sensors, function(i, val) {
      var graph = $('<div id="graph'+i+'" class="flot-graph"/>');
      var graph_w = parseInt( /\d+/.exec(graph.css('width')) );
      var graph_h = parseInt( /\d+/.exec(graph.css('height')) );
      var graph_container = $('<div id="graph_cont'+i+'" style="width: '+ (graph_w + 30) +'px; height: '+ (graph_h + 20) +'px;"/>');
      graph_container.append(graph);
      sen_sel.append(graph_container).tabs('add', '#graph_cont'+i, val.name);
  });
  sen_sel.bind('tabsshow', function() {plotAsSelected()});
  sen_sel.tabs('select', 0);
}

plotAsSelected();

$('#loading').hide();
$('input.ui-widget').val('');
